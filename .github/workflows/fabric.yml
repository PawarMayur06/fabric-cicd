name: Deployment Pipeline
on:
  push:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: test

    # env:
    #   TARGET_WORKSPACE_ID: ${{ secrets.PROD_WORKSPACE_ID }}
    #   SOURCE_WORKSPACE_ID: ${{ secrets.DEV_WORKSPACE_ID }}
    #   AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
    #   AZURE_REPO_PATH: ${{ github.workspace }}
    
    steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    # - name: Fetch Auth Token
    #   run: |
    #     az login --service-principal --username ${{ secrets.CLIENT_ID }} --password ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
    #     TOKEN=$(az account get-access-token --resource "https://api.fabric.microsoft.com" --query accessToken -o tsv)
    #     echo "AUTH_TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: Check current directory
      run: |
        echo "Current working directory:"
        pwd

    - name: Notebook Deployment
      run: |
        python ${{ github.workspace }}/devops_scripts/devops_scripts/notebooks.py
      env:
        TARGET_WORKSPACE_ID: ${{ vars.PROD_WORKSPACE_ID }}
        # target_workspace_id: ${{ secrets.PROD_WORKSPACE_ID }}
        AZURE_REPO_PATH: ${{ github.workspace }}
        AUTH_TOKEN: ${{ vars.AUTH_TOKEN }}
        # auth_token: ${{ secrets.AUTH_TOKEN }}

    - name: Pipeline Deployment
      run: |
        python ${{ github.workspace }}/devops_scripts/devops_scripts/deployment-pipelines.py
      env:
        source_workspace_id: ${{ vars.DEV_WORKSPACE_ID }}
        target_workspace_id: ${{ vars.PROD_WORKSPACE_ID }}
        base_path: ${{ github.workspace }}
        auth_token: ${{ vars.AUTH_TOKEN }}

    - name: Organize Resources
      run: |
        echo "Waiting 30 seconds before organizing resources..."
        sleep 30
        python ${{ github.workspace }}/devops_scripts/devops_scripts/folder-structure.py --workspace-id "${{ vars.PROD_WORKSPACE_ID }}" --token "${{ vars.AUTH_TOKEN }}" source --dir "${{ github.workspace }}"
